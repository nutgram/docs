"use strict";(self.webpackChunknutgram_docs=self.webpackChunknutgram_docs||[]).push([[8454],{10502:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return o},toc:function(){return s}});var n=a(83117),r=(a(67294),a(3905));a(56022);const l={},i="Rate Limiting",o={unversionedId:"usage/rate_limiting",id:"usage/rate_limiting",title:"Rate Limiting",description:"Nutgram offers a powerful rate-limiting feature to safeguard your bot from abuse.",source:"@site/docs/usage/rate_limiting.md",sourceDirName:"usage",slug:"/usage/rate_limiting",permalink:"/docs/usage/rate_limiting",draft:!1,editUrl:"https://github.com/nutgram/docs/tree/master/docs/usage/rate_limiting.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Middleware",permalink:"/docs/usage/middleware"},next:{title:"Keyboards",permalink:"/docs/usage/keyboards"}},m={},s=[{value:"Rate Limiters",id:"rate-limiters",level:2},{value:"Global Rate Limit",id:"global-rate-limit",level:3},{value:"Group Rate Limit",id:"group-rate-limit",level:3},{value:"Handler Rate Limit",id:"handler-rate-limit",level:3},{value:"Throttle Parameters",id:"throttle-parameters",level:2},{value:"Skip Rate Limiter",id:"skip-rate-limiter",level:2},{value:"Rate Limit Exceeded",id:"rate-limit-exceeded",level:2},{value:"Advanced example",id:"advanced-example",level:2}],p={toc:s};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rate-limiting"},"Rate Limiting"),(0,r.kt)("p",null,"Nutgram offers a powerful rate-limiting feature to safeguard your bot from abuse.",(0,r.kt)("br",null),"\nYou can set rate limits for specific handlers, groups, or the entire bot,\nensuring users can only make a controlled number of requests within a defined time frame."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The rate limiter will run only for updates with the ",(0,r.kt)("inlineCode",{parentName:"p"},"user.id")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"chat.id")," set.",(0,r.kt)("br",null),"\nThis means that the rate limiter will be skipped for updates without these fields.")),(0,r.kt)("p",null,"To apply a rate limiter, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"throttle")," method."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Available Rate Limits")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Handler Rate Limit"),": restricts the execution of a specific handler (highest priority)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Group Rate Limit"),": restricts the execution of handlers within a specific group."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Global Rate Limit"),": restricts the execution of any handler in the bot (lowest priority).")),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Each call to ",(0,r.kt)("inlineCode",{parentName:"li"},"throttle")," overrides the previous one."),(0,r.kt)("li",{parentName:"ul"},"The rate limiter follows a hierarchy: ",(0,r.kt)("strong",{parentName:"li"},"Handler > Group > Global"),".",(0,r.kt)("br",null),"\nThis means that a rate limiter applied at the ",(0,r.kt)("strong",{parentName:"li"},"Handler level")," will override any limits set at the ",(0,r.kt)("strong",{parentName:"li"},"Group")," or ",(0,r.kt)("strong",{parentName:"li"},"Global")," level.",(0,r.kt)("br",null),"\nSimilarly, a ",(0,r.kt)("strong",{parentName:"li"},"Group rate limit")," will override a ",(0,r.kt)("strong",{parentName:"li"},"Global rate limit"),", but not a ",(0,r.kt)("strong",{parentName:"li"},"Handler rate limit"),"."))),(0,r.kt)("h2",{id:"rate-limiters"},"Rate Limiters"),(0,r.kt)("h3",{id:"global-rate-limit"},"Global Rate Limit"),(0,r.kt)("p",null,"A global rate limiter can be set once and will apply to all handlers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n$bot->throttle(10); \n\n$bot->onCommand('start', StartCommand::class); // 10 messages per minute\n$bot->onCommand('help', HelpCommand::class); // 10 messages per minute\n\n$bot->run();\n")),(0,r.kt)("h3",{id:"group-rate-limit"},"Group Rate Limit"),(0,r.kt)("p",null,"A group rate limiter can be set for a specific group of handlers."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n\n$bot->group(function(Nutgram $bot){\n    $bot->onCommand('start', StartCommand::class); // 3 messages per minute\n    $bot->onCommand('help', HelpCommand::class); // 3 messages per minute\n})->throttle(3);\n\n$bot->run();\n")),(0,r.kt)("h3",{id:"handler-rate-limit"},"Handler Rate Limit"),(0,r.kt)("p",null,"A handler rate limiter can be set for a specific handler."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n\n$bot->onCommand('start', StartCommand::class)->throttle(5); // 5 messages per minute\n$bot->onCommand('help', HelpCommand::class)->throttle(5); // 5 messages per minute\n\n$bot->run();\n")),(0,r.kt)("h2",{id:"throttle-parameters"},"Throttle Parameters"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"throttle")," method accepts the following parameters:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"maxAttempts"),(0,r.kt)("td",{parentName:"tr",align:"left"},"int"),(0,r.kt)("td",{parentName:"tr",align:"left"}),(0,r.kt)("td",{parentName:"tr",align:"left"},"The number of messages allowed in the time frame")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"decaySeconds"),(0,r.kt)("td",{parentName:"tr",align:"left"},"int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"60"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The time frame in seconds")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"key"),(0,r.kt)("td",{parentName:"tr",align:"left"},"?string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A unique key to identify the group for the rate limiter")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"warningCallback"),(0,r.kt)("td",{parentName:"tr",align:"left"},"?callable"),(0,r.kt)("td",{parentName:"tr",align:"left"},"null"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A callback to be executed when the rate limit is exceeded")))),(0,r.kt)("h2",{id:"skip-rate-limiter"},"Skip Rate Limiter"),(0,r.kt)("p",null,"You can skip the rate limiter for a specific handler by calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"withoutThrottle")," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n$bot->throttle(5);\n\n$bot->onCommand('start', StartCommand::class); // 5 messages per minute\n$bot->onCommand('help', HelpCommand::class)->withoutThrottle(); // No rate limiter\n\n$bot->run();\n")),(0,r.kt)("h2",{id:"rate-limit-exceeded"},"Rate Limit Exceeded"),(0,r.kt)("p",null,"When the rate limit is exceeded, the bot will send a message (",(0,r.kt)("strong",{parentName:"p"},"once"),") to the user with the following text:"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Too many messages, please wait a bit. This message will only be sent once until the rate limit is reset.")),(0,r.kt)("p",null,"If you want to customize this message, you can set your logic in the throttle method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n\n$bot->onCommand('start', StartCommand::class)\n    ->throttle(5, warningCallback: function (Nutgram $bot, int $availableIn) {\n        $bot->sendMessage(\"You're sending too many messages. Please wait $availableIn seconds.\");\n    });\n")),(0,r.kt)("h2",{id:"advanced-example"},"Advanced example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$bot = new Nutgram('your-token-here');\n$bot->throttle(4);\n\n$bot->onCommand('start', StartCommand::class); // 4 messages per minute\n$bot->onCommand('help', HelpCommand::class)->throttle(2); // 2 messages per minute\n\n$bot->group(function (Nutgram $bot) {\n\n    $bot->onCommand('feedback', FeedbackCommand::class); // 3 messages per minute\n    $bot->onCommand('stats', StatsCommand::class)->throttle(2); // 2 messages per minute\n    $bot->onCommand('what', WhatCommand::class)->throttle(5); // 5 messages per minute\n\n    $bot->group(function (Nutgram $bot) {\n    \n        $bot->onCommand('settings', SettingsCommand::class); // 2 messages per minute\n        $bot->onCommand('donate', DonateCommand::class)->throttle(1); // 1 message per minute\n        $bot->onCommand('refund', RefundCommand::class)->throttle(3); // 3 messages per minute\n        \n    })->throttle(2);\n    \n})->throttle(3);\n\n")))}d.isMDXComponent=!0}}]);